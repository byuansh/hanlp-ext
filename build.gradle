buildscript {
    ext {
        versionElasticsearch = "5.6.5"
    }
    repositories {
		maven { url 'file:///e:/apache-maven-3.3.9/repository/'} //使用file协议，本地仓库
		mavenLocal()
        maven { url 'http://repox.gtan.com:8078' }
        mavenCentral()
        jcenter()
    }
}

allprojects {
    repositories {
		maven { url 'file:///e:/apache-maven-3.3.9/repository/'} //使用file协议，本地仓库
		mavenLocal()
        maven { url 'http://repox.gtan.com:8078' }
        mavenCentral()
        jcenter()
    }

    // no unit tests
}

def ccCommonBuildScript = file("$rootDir/gradle/common.gradle")

project(':common') {
    apply from: ccCommonBuildScript

    description = 'common'

    dependencies {
        compile("org.elasticsearch:elasticsearch:$versionElasticsearch")
        compile group: 'com.hankcs', name: 'hanlp', version: 'portable-1.5.3'
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    }
}

// project(':hanlp-io') {
//     apply from: ccCommonBuildScript
// 
//     description = 'hanlp-io'
// 
//     dependencies {
//         compile project(':common')
// 
//         compile("org.apache.hadoop:hadoop-client:2.8.3")
//     }
// }

project(':es-plugin') {
    apply from: ccCommonBuildScript

    description = 'es-plugin'

    version = versionElasticsearch

    configurations {
        includeJars
    }

    dependencies {
        compile project(':common')
        testCompile("org.elasticsearch.test:framework:$versionElasticsearch")
        testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.12'
        includeJars(project(':common'))
    }

    test.enabled = false

    task buildPluginZip(type: Zip) {
        baseName = 'elasticsearch-hanlp'
        from files(libsDir)
        from 'src/main/universal'
        from configurations.includeJars
                .filter { file ->
                    String path = file.toString()
                    !(path.contains("org.apache.lucene")
                            || path.contains("org.elasticsearch")
                            || path.contains("com.fasterxml.jackson")
                            || path.contains("net.sf.jopt-simple")
                            || path.contains("com.carrotsearch")
                            || path.contains("joda-time")
                            || path.contains("org.yaml")
                            || path.contains("com.tdunning")
                            || path.contains("org.hdrhistogram")
                            || path.contains("log4j")
                    )
                }
                .collect { it }
//        from configurations.includeJars.collect { it }
        into 'elasticsearch'
    }

    artifacts {
        archives buildPluginZip
    }
}

